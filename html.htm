<!DOCTYPE html>
<html>
<head>
	<title>Felix Tumbarell</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" href="style.css">
	
</head>


<!-- -->
<!-- This styles are for the letter effects -->
<style>
	.wrapped {
		
		font-size: 2em;
		display: flex;
		flex-direction: column;		
		align-items: center;
		text-align: center;
	
    }
		
		



	.dinamic {
		color: var(--colorTitle);
		
		align-content: center;
		place-content: center ;	
		position: absolute;
		text-align: center;
		/*outline: 2px solid red;*/
		width: max-content;
		text-transform: uppercase;
		z-index: 4;
		
		
	}
		.dinamic pre{
			font-family: Tahoma, sans-serif;
			letter-spacing: 0.28em;		
			text-align: center;	
			/*text-shadow: 2px 0 0 var(--color1) ;
			animation: apare 1s steps(11) 1s forwards;*/
			
			
		}

		.dinamic::before,
		.dinamic::after {
			content: " ";
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			 
		}

		.dinamic::before{
			background-color:var(--backgroundcolor);
			animation: 
				typewriter var(--animationspeed) steps(var(--typerwritersCharacters)) 1s forwards;
				
				
		}

			@keyframes typewriter {
				
					0%   {left: 0%; }
					50%   {left: 100%; }
					75%   {left: 100%; }
					100%   {left: 100%; }
					

					

				}}

				@keyframes typereverse {
				to {
					right: 100%;
					

				}}
			
				/*@keyframes apare {
					0%   { opacity:0; }
					10%  { opacity:1; }
					20% { opacity:0; }
					30% { opacity:1; }
					40% { opacity:0; }
					50% { opacity:1; }
					60% { opacity:0; }
					70% { opacity:1; }
					80% { opacity:0; }
					100% { opacity:1; }
					
				}*/
			

				
			.dinamic::after{
				width: 0.05em;
				background-color:var(--color1);
				animation: 
					typewriter var(--animationspeed) steps(var(--typerwritersCharacters)) 1s  forwards, 
					blink 750ms steps(11) infinite;
					

			}

			@keyframes blink {
				to{
					background: transparent;

				}
				
			}

			


	.static {
		position: absolute;
		z-index: 3;
		color: aliceblue;
		text-align: center;
		font-size: 2em;
		opacity:0 ;
		transform: translateY(1em);
		animation: fadein 1s 2s forwards  ;
		
	}
		@keyframes fadein {
				to{
					opacity: 1;
					transform: translateY(0);
				}
				
			}


		.static::before,
		.static::after {
			content: " ";
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			 
		}

		.static::before{
			

		}
		
		.static::after {
			
			
		}
			

		.menu{
			opacity:0 ;
			transform: translateY(1em);
			animation: fadein 1s 2.5s forwards  ;
		}



</style>


 <!--This are the header styles -->

<style>

	.dinamic{
		/*margin-top: 6em;
		margin-left: 33%;*/
		margin-top:6.2em;
		

	}

	#static{
		display: flex;
		flex-direction: column;		
		align-items: center;
		text-align: center;
		
	}

	.static{
		/*margin-top: 15em;
		margin-left: 43.3%;*/
		font-weight: 300;
		margin-top: 15em;
		
	}

			.dinamic, .static {
				
			}



	.hbuton{
		color: var(--color2) ;
		z-index: 5; 
		position: relative; 
		background-color: var(--transparentbg); 
		padding: 0em 0.1em 0em 0.1em;
		margin-bottom: ;
		border: none;
		border-color: /*0px solid var(--color1)*/ ;
		border-radius: 25%;
		font-size: 3em;
		align-content: center;
		transform: translateY(1em);
		opacity: 0;
		animation: fadein 2s 3s forwards;

	}

		.hbuton:hover{
			background-color:  ;
			color:  var(--color1)  ;
			font-size: ;
			border: none;
			transform: translateY(1em);
			
		}

		#time{
			color: var(--color1);
			font-size: 1em;
		}





</style>

<!-- todas las demas propiedades del header-->

<style>


	
</style>

<!-- propiedades de page 2-->

<style>


		.background-image{
			position: absolute;	
			z-index: 0;
			background: var(--bagpage2);
			background-color: aliceblue;
			background-size: cover;
			filter: sepia(90%);
			width: 100%;
			height: 100%;
			display: block;
			opacity: 0.5;
		}

			.intro{
				margin-top: 10%;
				margin-left: 20%;
				margin-bottom: ;
				text-align: center;
				/*border: 1px solid red;*/
				display:block;
				position: absolute;
				width: 17%;
				align-items: center;
				align-content: center;
				place-content: center;

			}
				.tit{
					font-size: px;
					font-weight: 400;
				}
					#element{
						font-size: 14px;
					}
				
				.userhome{
					margin-left: 15%;
					padding: 0px;
					margin-bottom: 1em;
					position:relative;
					
				}

/*
				#user:hover{
						animation: color 1ms steps(1) forwards;
					} */

					@keyframes color {
						
						to{
							filter: grayscale(100%);
						}
					}

			.cuad1{
				position:relative;
				width: 30%;
				height: 60%;
				background-color: var(--semitransparentbg);
				left: 50%;
				margin-top: 8em;
				display: inline-block ;
				border-radius: 50px;
				opacity:0 ;
				transform: translateY(10em);
				animation: fadein 2s 2s forwards  ;
				box-shadow: 0 4px 50px 10px var(--shadow1), 0 6px 50px 10px var(--shadow1);
				/*-webkit-box-reflect: below 10px linear-gradient(to bottom, rgba(0,0,0,0.0), rgba(0,0,0,0.1));*/

				
			}

			.cuad2{
				position: ;
				width: 20%;
				height: 45%;
				background-color: var(--color1);
				left: 40%;
				margin-top: 5em;
				display: none ;
				opacity:0 ;
				transform: translateY(10em);
				animation: fadein 1s 8s forwards  ;
			}

				.tag1{
					padding: 1em;
					margin: 2em 1em 1em 3em;
					background-color: var(--semitransparentbgwhite);
					border: 0px solid var(--color1) ;
					border-radius: 50px;
					color: var(--color1);
					font-weight: 500;
				}
					.tag1:hover{
						background-color:var(--backgroundcolor) ;
						color: var(--color1);
						border: none;
					}

				.proyect{
					/*border: 1px solid red;*/
					width: auto;
					height: 75%;
					border-radius: 50px 50px 0px 0 ;
					background: var(--imgproyect1) ;
					background-size: cover;
					
					
				}
					.proytitle{
						margin: 10px 0 0 30px;
						padding: auto;
						color: var(--color1);						
						position: inherit;
						display: inline-block;
						width: 150px;
						text-align: center;
						
					}

						#verproyect{
							border: 1px solid var(--color1);
							font-size: 14px;
							padding: 2px;
							background-color: var(--color1trans);
							border-radius: 10px;

						}

						.txtproyect{
							padding: 1em 2em 1em 30px;
							color: var(--textcolor);
							font-size: 14px;
							
						}
							#more {display: none;}


				
</style>


<!-- BODYYYYYY -->

<body>
	



	<header>
		
		<div class="header"> 
			<div id="menu">
				<ul class="menu" style="color:var(--colorTitle) ;">
					<li><a href="felixtumbarell.com">Home</a></li>
					<li><a href="studio.html">Studio</a></li>
					<li ><a href="contact.html"> Contact</a></li>
					<!--<li class="">Contact</li>-->
				</ul>
			</div>
			
			<div class="wrapped">
				<h1 class="dinamic" > 
					<pre class="list" type="text" id="buenas"></pre>
				</h1>
			</div>
			<div id="static">
				<h1 class="static"  >  Mi nombre es Felix </h1>
			</div>
			<canvas>
				
			</canvas>
			<div class="holder">
				<p id="wspace"><br><br><br><br><br><br><br><br><br><br><br><br></p>
				<p id="time" style="position:  ;"></p>
				<button class="hbuton" style=""  >
				<a href="#page2" style="text-decoration: none;color:inherit;" onclick="document.getElementById('all').style.display='block' ">&#8893</a></button>
			</div>


			<!-- Header Section 
			<h2 class="subtitle">Un subtitulo</h2>
			<nav class="menu">
				<a href="#">Inicio</a>
				<a href="#">Acerca</a>
				<a href="#">Contacto</a>
			</nav> -->

		  
		</div>


	</header>

	<!-- Here is PAGE 2	 -->

		<div class="all" style="display: ;">
			<div class="page2" id="page2" onmouseover="typed()">
					<div class="background-image"></div>
					<div class="raya" style="background-color: var(--backgroundcolor); height:6em;box-shadow: var(--box-shadow); z-index: 2; position: relative; opacity: 0.5; "></div>

					<div class="intro">
						<div id="user" class="userhome" style=""> </div>
						<h1 class="tit">Hola</h1>
						<span id="element1" style="color:var(--textcolor);margin-bottom: ; "></span>
						<span style="padding: 10px;height:10px; display: block;"> 
						</span>
						
						
					</div>

					<div class="cuad1">
						<button class="tag1" style="position: absolute;"> Branding</button>
						<div class="proyect" ></div>
						<h3 class="proytitle"> NEWDAY Studio </h3> 
						<h3 class="proytitle" id="verproyect"> Ver Proyecto</h3> 
						<p class="txtproyect ">Lorem ipsum dolor sit amet, consectetur adipiscing 
							elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem  
							vitae<span id="dots">...</span><span id="more">erisque enim ligula 
								venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor 
								vitae massa. Fusce luctus vestibulum augue ut aliquet. Nunc sagittis 
								dictum nisi, sed ullamcorper ipsum dignissim ac. In at libero sed nunc 
								venenatis imperdiet sed ornare turpis. Donec vitae dui eget tellus 
								gravida venenatis. Integer fringilla congue eros non fermentum. 
								Sed dapibus pulvinar nibh tempor porta.</span> 
							<a onclick="" href="http://felixtumbarell.com" id="myBtn" style="color:var(--color1) ;">Read more</a>
						</p>

              				


					</div>
					<div class="cuad2" style="display: none;" >
					
					</div>




			</div>
		</div>


<!-- Here is footer -->
	<footer>
		<div class="footer" >

		</div>

	</footer>



	  
	<script src="script.js"></script>

<!-- Here is  the ball-->

	<script>

		// Initial Setup for the balls
			const canvas = document.querySelector('canvas');
			const c = canvas.getContext('2d');


			canvas.width = innerWidth;
			canvas.height = innerHeight;

						// Variables
			let mouse = {
				x: innerWidth / 2,
				y: innerHeight / 2 
			};

			let ballCount = 750;
			let balls = [];
			let gravityPos = [];
			let friction = .995;
			let explosionDistance = 5;
			let shouldExplode = false;

			const colors = [
			'#85937a',
			'#586c5c',
			'#a9af90',
			'var(--color1)'
			];

			const bgColor = '#000';


			// Event Listeners
			addEventListener("mousemove", function(event) {
				mouse.x = event.clientX;
				mouse.y = event.clientY;
				gravityPos = [mouse.x, mouse.y];
			});

			addEventListener("mouseout", function(event) {
			gravityPos = [canvas.width / 2, canvas.height / 2];
			});

			addEventListener("resize", function() {
				canvas.width = innerWidth;	
				canvas.height = innerHeight;

				init();
			});

			addEventListener("click", function() {
				init();
			});


			// Utility Functions
			function randomIntFromRange(min,max) {
				return Math.floor(Math.random() * (max - min + 1) + min);
			}

			function randomeFloatFromRange(min, max){
			return Math.random() * (max - min) + min;
			}

			function randomColor(colors) {
				return colors[Math.floor(Math.random() * colors.length)];
			}


			// Objects
			function Ball(px, py, vx, vy, f, radius, color) {
				this.p = [px, py];
				this.v = [vx, vy];
				this.gv = [0, 0];
				this.gp = 0;
				this.radius = radius;
				this.color = color;
				this.f = f;

				this.update = function() {
				// calculate gravity vector
				this.gv = [gravityPos[0] - this.p[0], gravityPos[1] - this.p[1]];
			
				// Calculate gravity intensity
				let a = gravityPos[0] - this.p[0];
				let b = gravityPos[1] - this.p[1];
				this.gp = 1 / (Math.sqrt( a*a + b*b ));   
				
				// Explode if needed
				if (shouldExplode){
				this.v[0] *= randomeFloatFromRange(-10, 10);
				this.v[1] *= randomeFloatFromRange(-10, 10);
				}
				
				// Reduce ball's own velocity with friction
				this.v[0] *= this.f;
				this.v[1] *= this.f;
				
				// Calculate new velocity, add gravity
				this.v[0] += this.gv[0] * this.gp * this.f;
				this.v[1] += this.gv[1] * this.gp * this.f;
				
				// Move
					this.p[0] += this.v[0];
					this.p[1] += this.v[1];
					this.draw();
				};

				this.draw = function() {
					c.save();
					c.beginPath();
					c.arc(this.p[0], this.p[1], this.radius, 0, Math.PI * 2, false);	
					c.fillStyle = this.color;
					c.fill();
					c.closePath();
					c.restore();
				};
			}


			// Implementation
			function init() {
				gravityPos = [canvas.width / 2, canvas.height / 2];
				balls = [];
				for(let i = 0 ; i < ballCount ; i++){
				let rd = randomeFloatFromRange(1, 2);
				let px = randomeFloatFromRange(0, canvas.width);
				let py = randomeFloatFromRange(0, canvas.height);
				let vx = randomeFloatFromRange(-10, 10);
				let vy = randomeFloatFromRange(-10, 10);
				let f = friction;
				balls.push(new Ball(px, py, vx, vy, f, rd, randomColor(colors)));
			}
			}

			// Animation Loop
			function animate() {
				requestAnimationFrame(animate);
				resetCanvas(bgColor);
				updateShouldExplode();
				for(let i = 0 ; i < balls.length ; i++){
				balls[i].update();
			}
			}

			init();
			animate();

			function resetCanvas(color){
				if(color){
				c.save();
				c.fillStyle = color;
				c.fillRect(0, 0, canvas.width, canvas.height);
				c.restore();
				}else{
				c.clearRect(0, 0, canvas.width, canvas.height);
			}
			}
			
				function updateShouldExplode(){
				let x = 0;
				let y = 0;
				for(let i = 0 ; i < balls.length ; i++){
				x += balls[i].v[0] < 0 ? balls[i].v[0] * -1 : balls[i].v[0];
				y += balls[i].v[1] < 0 ? balls[i].v[1] * -1 : balls[i].v[1];
				}
				shouldExplode = x / balls.length < explosionDistance && y / balls.length < explosionDistance;
			}
	

	</script>

<!-- Here is where hare la funcion de la hora -->

		<script>
  
			const hour = new Date().getHours(); 
			let greeting;
			if (8 < hour < 12) {
  			greeting = "Buenos dias";
			}
			if  (12< hour < 19) {
  			greeting = "Buen Dia";
			}
			else if( hour > 22) {
  			greeting = "Buenas Noches";
			}
			
			document.getElementById("buenas").innerHTML = greeting;
			
  	/*			if (new Date().getHours() < 18) {
					document.getElementById("demo").innerHTML = "Good day!";
					}

*/		
			
				function ment(f) {	 					
  					return ("Hola")/*(new Date().getHours()) + (7)*/;
				
				};
	
				var mom = new Date().toLocaleTimeString();
				
				var datetime = new Date().toLocaleTimeString();
				console.log(datetime); // it will represent date in the console of developers tool
				document.getElementById("time").textContent = datetime; // represent on html page

				function refreshTime() {
				const timeDisplay = document.getElementById("time");
				const dateString = new Date().toLocaleTimeString();
				const formattedString = dateString.replace(", ", " - ");
				timeDisplay.textContent = formattedString;
}
 				setInterval(refreshTime, 1000);
				

		</script>

<!-- Page 2 anmimations 

the letters-->

		<script src="https://unpkg.com/typed.js@2.0.132/dist/typed.umd.js"></script>
		<script>
			/*
			document.getElementById("page2").addEventListener("mouseover", mouse);*/

					var typed = new Typed('#element1', {
					strings: ['Soy diseñador gráfico y freelancer, especializado en la creación y diseño de identidad corporativa, diseño de paginas web y diseño de materiales editoriales. Con mis conocimientos de marketing, branding, estudio de mercados puedo ayudarle a llevar su marca al próximo nivel.'/*, '&amp; a second sentence.'*/],
						typeSpeed: 50,
					});
				
		</script>


	<!-- Setup and start animation! -->

		<script>
				(document).ready(function() {
					('a[href^="#page2"]').click(function() {
					var destino = (this.hash); //this.hash lee el atributo href de este
					('html, body').animate({ scrollTop: destino.offset().top }, 1500); //Llega a su destino con el tiempo deseado
					return false;
				});
				});



			function show()
				{        
					document.getElementById("all").style.display="block";
				}




		</script>

	<!-- Setup and start animation! -->

		<script>

				function readmore() {
				var dots = document.getElementById("dots");
				var moreText = document.getElementById("more");
				var btnText = document.getElementById("myBtn");

				if (dots.style.display === "none") {
					dots.style.display = "inline";
					btnText.innerHTML = "Read more"; 
					moreText.style.display = "none";
				} else {
					dots.style.display = "none";
					btnText.innerHTML = "Read less"; 
					moreText.style.display = "inline";
				}
				}

	    </script>






	
</body>
</html>
